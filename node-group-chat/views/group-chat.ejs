
<!DOCTYPE html>
<html>
<head>
  <title>chat ambiente valutatore</title>
  <meta charset="UTF-8" />
  <style>
      body{
    background-image: url("https://assets.justinmind.com/wp-content/uploads/2020/02/website-background-design-guide.png");
    background-repeat: no-repeat;
    background-size: cover;
    font-family: sans-serif;
  }
  #container{
    position: fixed;
    width: 25%;
    height: 40%;
    bottom: 0;
    right: 0;
  
  }
  #subcontainer{
    width: 100%;
    height: 100%;
    position: relative;
  }
  #chat-open{
    visibility: hidden;
  }
  
  #top-chat label[for="msg"]{
    display: block;
    text-align:center;
    height: 8%;
    letter-spacing: 2px;
    font-weight: lighter;
  }
  #chat-form{
    display: flex;
    flex-flow: row wrap;
    align-items: center;
  }
  #bottom-chat{
    position: absolute;
    bottom: 14%;
    width: 100%;
    height: 10%;
  }
  @media (max-width: 1000px) {
     form {
        flex-direction: column;
        align-items: stretch;
     }
  }
  #bottom-chat #txt{
    width: 70%;
    height: 100%;
    border: 1px solid transparent;
    border-radius: 5px;
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
  }
  #bottom-chat #send{
    width: 20%;
    height: 100%;
    background-color: white;
    border: 1px solid transparent;
    border-radius: 5px;
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
  }
  
  #chat-button{
    position: absolute;
    bottom: 1px;
    width: 100%;
    height: 13%;
  }
  #chat-button #chat-closed{
    width: 100%;
    height: 100%;
    border-radius:5px;
    opacity: 0.7;
    border: 1px solid transparent;
    letter-spacing: 2px;
    font-weight: bolder;
  }
  li{
      background-color:white;
      opacity: 0.7;
      border-radius: 5px;
      border:1px solid transparent;
      color: black;
      letter-spacing: 1px;
      font-family: sans-serif;
      height: 30px; width:100%;
  }

  #messages { list-style-type: none; margin: 0; padding: 0; }
  #messages li { padding: 5px 10px; }
  #messages li:nth-child(odd) { background: #eee; }
  </style>
  <script >function chatOpen(){

    var x= document.getElementById("chat-open");
    if(x.style.visibility== "hidden") {
      x.style.visibility = "visible";
    } else {
      x.style.visibility = "hidden";
    }
  }</script>
  <script src="../../socket.io/socket.io.js"></script>
  <script src="http://code.jquery.com/jquery-1.10.1.min.js"></script>
</head>
<body>
 
  <div id="container">
    <div id="subcontainer">
    <!- chat aperta; visibility: hidden ->
    <div id="chat-open">

      <div id="top-chat">
        <label for="msg">Messages</label>
       <div id="speech-bubble"></div>
      </div>

      <div id="messages-container">
        <ul id="messages"></ul>
      </div>

      <div id="bottom-chat">
        <form action="/" method="POST" id="chatForm">
          <label for="chat-textarea"></label>
          <input type="text" name="chat-textarea" id="txt" autocomplete="off" autofocus="on" placeholder="type your message here..." /><button type="button" id="send">Send</button>
        </form>

      </div>
    </div>



    <!- bottone per aprire la chat ->
    <div id="chat-button">
      <button type="button" class="chatClosed" id="chat-closed" onclick="chatOpen()">Chat</button>
    </div>
</div>
</div>
<script>
        var socket = io.connect('http://localhost:8080');
        // submit text message without reload/refresh the page
        $('form').submit(function(e){
            e.preventDefault(); // prevents page reloading
            socket.emit('chat_message', $('#txt').val());
            $('#txt').val('');
            return false;
        });
        // append the chat text message
        socket.on('chat_message', function(msg){
                $('#messages').append($('<li>').html(msg));
            });
            // append text if someone is online
            socket.on('is_online', function(username) {
                $('#messages').append($('<li>').html(username));
            });
            // ask username
            var username = prompt('Please tell me your name');
            socket.emit('username', username);
    </script>

</body>
</html>